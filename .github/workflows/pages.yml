name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1' # Weekly security audit on Mondays at 2 AM

env:
  NODE_VERSION: '20'

jobs:
  # Combined quality checks, security audit, and build
  ci:
    name: 🔍 CI - Quality & Security
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.should-deploy }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      # Quality checks
      - name: 🔍 ESLint
        run: npm run lint

      - name: 🔧 TypeScript check
        run: npm run type-check

      - name: 🧪 Run tests
        run: npm test

      # Security checks
      - name: 🔒 Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: ${{ github.event_name == 'schedule' }}

      - name: 📋 Dependency review (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

      # Build application
      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 7

      # Check if deployment is needed
      - name: 🎯 Check deployment needs
        id: changes
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "should-deploy=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "should-deploy=preview" >> $GITHUB_OUTPUT
          else
            echo "should-deploy=none" >> $GITHUB_OUTPUT
          fi

  # Deployment job (conditional)
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: ci
    if: needs.ci.outputs.should-deploy != 'none'
    environment:
      name: ${{ needs.ci.outputs.should-deploy }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

      - name: 🚀 Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: couple-connect
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      # Production-only steps
      - name: 🏷️ Create GitHub Release
        if: needs.ci.outputs.should-deploy == 'production'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            🚀 **Automated Release**

            **Commit**: ${{ github.sha }}
            **Message**: ${{ github.event.head_commit.message }}

            **🔗 Deployment**: ${{ steps.deploy.outputs.url }}

            ---

            This release was automatically created from the main branch.
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ needs.ci.outputs.should-deploy }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.ci.outputs.should-deploy }}" == "production" ]]; then
            echo "- **Release**: v${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          fi
