name: 🐳 Docker Build (Optimized)

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package*.json'
      - 'Dockerfile*'
      - 'nginx.conf'
  workflow_dispatch:

# Cancel old runs
concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/couple-connect

jobs:
  # 🐳 Build and test Docker image
  docker:
    name: 🐳 Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📝 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            CONTAINER=alpine

      - name: 🧪 Test container (local)
        if: github.event_name == 'pull_request'
        run: |
          # Build for testing
          docker build -t test-image .

          # Start container
          docker run -d -p 3000:80 --name test-container test-image

          # Wait and test
          sleep 10
          curl -f http://localhost:3000/ || exit 1

          # Cleanup
          docker stop test-container
          docker rm test-container
