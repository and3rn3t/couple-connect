name: 🔒 Branch Protection Status Checks

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

# Minimal permissions for security
permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  NODE_VERSION: '20'
  FORCE_COLOR: 3
  CI: true

jobs:
  # 🧪 Tests & Code Quality Check
  tests-quality:
    name: 🧪 Tests & Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type check
        run: npm run type-check

      - name: 🧹 Lint
        run: npm run lint

      - name: 🧪 Run tests
        run: npm run test

      - name: 📊 Test coverage
        run: npm run test:coverage

  # 📱 Mobile Performance Check
  mobile-performance:
    name: 📱 Mobile Performance
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build
        run: npm run build

      - name: 📱 Mobile performance check
        run: npm run perf:mobile

      - name: 📊 Bundle analysis
        run: npm run build:analyze

  # 🔒 Security Analysis Check
  security-analysis:
    name: 🔒 Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Security audit
        run: npm audit --audit-level high
        continue-on-error: false

      - name: 🔍 Dependency check
        run: npm run security:check
        continue-on-error: false

  # 🚨 Infinite Loop Detection Check
  infinite-loop-detection:
    name: 🚨 Infinite Loop Detection
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🚨 Run infinite loop detection
        run: node scripts/check-infinite-loops.js
        continue-on-error: false

      - name: ✅ Validate detection results
        run: |
          if [ -f infinite-loop-results.json ]; then
            echo "Detection completed successfully"
            cat infinite-loop-results.json
          else
            echo "No critical issues detected"
          fi

  # 📊 Bundle Analysis Check
  bundle-analysis:
    name: 📊 Bundle Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build
        run: npm run build

      - name: 📊 Analyze bundle
        run: npm run build:analyze

      - name: 📱 Check bundle size limits
        run: |
          if [ -f dist/stats.json ]; then
            echo "Bundle analysis completed"
            # Add bundle size validation logic here
          fi

  # 🔍 TypeScript Check
  typescript-check:
    name: 🔍 TypeScript Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 TypeScript compilation
        run: npx tsc --noEmit

      - name: 🔍 Type check with strict mode
        run: npm run type-check

  # 🧹 Lint & Format Check
  lint-format:
    name: 🧹 Lint & Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 ESLint check
        run: npm run lint

      - name: 🎨 Format check
        run: npm run format:check

      - name: 📝 Markdown lint
        run: npm run lint:md

  # 🎯 Overall Status Check
  branch-protection-status:
    name: 🎯 Branch Protection Status
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs:
      - tests-quality
      - mobile-performance
      - security-analysis
      - infinite-loop-detection
      - bundle-analysis
      - typescript-check
      - lint-format
    if: always()
    steps:
      - name: 📊 Check all required status
        run: |
          echo "All required checks completed"
          echo "Tests & Code Quality: ${{ needs.tests-quality.result }}"
          echo "Mobile Performance: ${{ needs.mobile-performance.result }}"
          echo "Security Analysis: ${{ needs.security-analysis.result }}"
          echo "Infinite Loop Detection: ${{ needs.infinite-loop-detection.result }}"
          echo "Bundle Analysis: ${{ needs.bundle-analysis.result }}"
          echo "TypeScript Check: ${{ needs.typescript-check.result }}"
          echo "Lint & Format: ${{ needs.lint-format.result }}"

      - name: ✅ All checks passed
        if: needs.tests-quality.result == 'success' && needs.mobile-performance.result == 'success' && needs.security-analysis.result == 'success' && needs.infinite-loop-detection.result == 'success' && needs.bundle-analysis.result == 'success' && needs.typescript-check.result == 'success' && needs.lint-format.result == 'success'
        run: echo "🎉 All branch protection checks passed!"

      - name: ❌ Some checks failed
        if: needs.tests-quality.result != 'success' || needs.mobile-performance.result != 'success' || needs.security-analysis.result != 'success' || needs.infinite-loop-detection.result != 'success' || needs.bundle-analysis.result != 'success' || needs.typescript-check.result != 'success' || needs.lint-format.result != 'success'
        run: |
          echo "❌ Some required checks failed. Pull request cannot be merged."
          exit 1
